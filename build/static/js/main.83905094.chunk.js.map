{"version":3,"sources":["components/Filter.js","components/Form.js","components/Person.js","components/Notif.js","components/Error.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","Form","onSubmit","addPerson","newName","handleInputName","newNo","handleInputNo","type","Person","person","delPerson","name","number","onClick","Notification","message","className","Error","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNo","setFilter","notif","setNotif","error","setError","useEffect","personService","initialPersons","Notif","event","target","filtered","toLowerCase","includes","preventDefault","some","window","confirm","find","p","changedNo","updatedPerson","map","setTimeout","catch","personObject","createdPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83905094.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input value={props.filter} onChange={props.onChange}/><br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.handleInputName}/><br />\r\n                number: <input value={props.newNo} onChange={props.handleInputNo}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Person = ({ person, delPerson }) => {\r\n  return (\r\n    <div>\r\n      <p>{person.name} {person.number}</p><button onClick={delPerson}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"notif\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","const Error = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst delPer = id => {\r\n  axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, delPer }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Person from './components/Person'\nimport Notification from './components/Notif'\nimport Error from './components/Error'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNo, setNewNo ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [notif, setNotif] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleInputName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleInputNo = (event) => {\n    setNewNo(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n    const filtered = persons.filter(person => person.name.toLowerCase().includes(event.target.value.toLowerCase()))\n    setPersons(filtered)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if ((persons.some(person => person.name === newName))) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const person = persons.find(p => p.name === newName)\n        const changedNo = { ...person, number: newNo }\n        personService\n          .update(person.id, changedNo)\n          .then(updatedPerson => {\n            setPersons(persons.map(p => p.id !== person.id ? p : updatedPerson))\n            setNotif(`Updated ${person.name}`)\n            setTimeout(() => {\n              setNotif(null)\n            }, 3000)\n          })\n          .catch(error => {\n            setError(`Information of ${person.name} has already been removed from server`)\n            setPersons(persons.filter(p => p.id !== person.id))\n            setTimeout(() => {\n              setError(null)\n            }, 3000)\n          })\n        setNewName('')\n        setNewNo('')\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNo\n      }\n      personService\n        .create(personObject)\n        .then(createdPerson => {\n          setPersons(persons.concat(createdPerson))\n          setNotif(`Added ${personObject.name}`)\n          setTimeout(() => {\n            setNotif(null)\n          }, 3000)\n        })\n      setNewName('')\n      setNewNo('')  \n    }\n  }\n\n  const delPerson = (id) => {\n    const name = persons.filter(p => p.id === id)[0].name\n    if(window.confirm(`Delete ${name}?`)) {\n      personService\n        .delPer(id)\n      setPersons(persons.filter(p => p.id !== id))\n      setNotif(`Deleted ${name}`)\n      setTimeout(() => {\n        setNotif(null)\n      }, 3000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notif} />\n      <Error message={error} />\n      <Filter filter={filter} onChange={handleFilter} />\n      <h3>Add a new</h3>\n      <Form addPerson={addPerson} newName={newName} handleInputName={handleInputName} newNo={newNo} handleInputNo={handleInputNo} />\n      <h3>Numbers</h3>\n      {persons.map(person => \n        <Person key={person.id} person={person} delPerson={() => delPerson(person.id)} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}